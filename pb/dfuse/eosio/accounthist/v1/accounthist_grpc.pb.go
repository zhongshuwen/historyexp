// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.4
// source: dfuse/eosio/accounthist/v1/accounthist.proto

package pbaccounthist

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AccountHistoryClient is the client API for AccountHistory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AccountHistoryClient interface {
	GetActions(ctx context.Context, in *GetActionsRequest, opts ...grpc.CallOption) (AccountHistory_GetActionsClient, error)
}

type accountHistoryClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountHistoryClient(cc grpc.ClientConnInterface) AccountHistoryClient {
	return &accountHistoryClient{cc}
}

func (c *accountHistoryClient) GetActions(ctx context.Context, in *GetActionsRequest, opts ...grpc.CallOption) (AccountHistory_GetActionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &AccountHistory_ServiceDesc.Streams[0], "/dfuse.eosio.accounthist.v1.AccountHistory/GetActions", opts...)
	if err != nil {
		return nil, err
	}
	x := &accountHistoryGetActionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AccountHistory_GetActionsClient interface {
	Recv() (*ActionResponse, error)
	grpc.ClientStream
}

type accountHistoryGetActionsClient struct {
	grpc.ClientStream
}

func (x *accountHistoryGetActionsClient) Recv() (*ActionResponse, error) {
	m := new(ActionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AccountHistoryServer is the server API for AccountHistory service.
// All implementations must embed UnimplementedAccountHistoryServer
// for forward compatibility
type AccountHistoryServer interface {
	GetActions(*GetActionsRequest, AccountHistory_GetActionsServer) error
	mustEmbedUnimplementedAccountHistoryServer()
}

// UnimplementedAccountHistoryServer must be embedded to have forward compatible implementations.
type UnimplementedAccountHistoryServer struct {
}

func (UnimplementedAccountHistoryServer) GetActions(*GetActionsRequest, AccountHistory_GetActionsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetActions not implemented")
}
func (UnimplementedAccountHistoryServer) mustEmbedUnimplementedAccountHistoryServer() {}

// UnsafeAccountHistoryServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AccountHistoryServer will
// result in compilation errors.
type UnsafeAccountHistoryServer interface {
	mustEmbedUnimplementedAccountHistoryServer()
}

func RegisterAccountHistoryServer(s grpc.ServiceRegistrar, srv AccountHistoryServer) {
	s.RegisterService(&AccountHistory_ServiceDesc, srv)
}

func _AccountHistory_GetActions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetActionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AccountHistoryServer).GetActions(m, &accountHistoryGetActionsServer{stream})
}

type AccountHistory_GetActionsServer interface {
	Send(*ActionResponse) error
	grpc.ServerStream
}

type accountHistoryGetActionsServer struct {
	grpc.ServerStream
}

func (x *accountHistoryGetActionsServer) Send(m *ActionResponse) error {
	return x.ServerStream.SendMsg(m)
}

// AccountHistory_ServiceDesc is the grpc.ServiceDesc for AccountHistory service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AccountHistory_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "dfuse.eosio.accounthist.v1.AccountHistory",
	HandlerType: (*AccountHistoryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetActions",
			Handler:       _AccountHistory_GetActions_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "dfuse/eosio/accounthist/v1/accounthist.proto",
}
