// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: dfuse/eosio/tokenmeta/v1/tokenmeta.proto

package pbtokenmeta

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SortOrder int32

const (
	SortOrder_ASC  SortOrder = 0
	SortOrder_DESC SortOrder = 1
)

// Enum value maps for SortOrder.
var (
	SortOrder_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	SortOrder_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x SortOrder) Enum() *SortOrder {
	p := new(SortOrder)
	*p = x
	return p
}

func (x SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[0].Descriptor()
}

func (SortOrder) Type() protoreflect.EnumType {
	return &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[0]
}

func (x SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOrder.Descriptor instead.
func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{0}
}

// you can sort by either: Symbol alphanumerically, holder count, market cap
type GetTokensRequest_SortField int32

const (
	GetTokensRequest_NONE       GetTokensRequest_SortField = 0
	GetTokensRequest_ALPHA      GetTokensRequest_SortField = 1
	GetTokensRequest_HOLDERS    GetTokensRequest_SortField = 2
	GetTokensRequest_MARKET_CAP GetTokensRequest_SortField = 3
)

// Enum value maps for GetTokensRequest_SortField.
var (
	GetTokensRequest_SortField_name = map[int32]string{
		0: "NONE",
		1: "ALPHA",
		2: "HOLDERS",
		3: "MARKET_CAP",
	}
	GetTokensRequest_SortField_value = map[string]int32{
		"NONE":       0,
		"ALPHA":      1,
		"HOLDERS":    2,
		"MARKET_CAP": 3,
	}
)

func (x GetTokensRequest_SortField) Enum() *GetTokensRequest_SortField {
	p := new(GetTokensRequest_SortField)
	*p = x
	return p
}

func (x GetTokensRequest_SortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTokensRequest_SortField) Descriptor() protoreflect.EnumDescriptor {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[1].Descriptor()
}

func (GetTokensRequest_SortField) Type() protoreflect.EnumType {
	return &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[1]
}

func (x GetTokensRequest_SortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTokensRequest_SortField.Descriptor instead.
func (GetTokensRequest_SortField) EnumDescriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{0, 0}
}

// You can sort by either: Symbol alphanumerically, Token Amount, market value of tokens
type GetAccountBalancesRequest_SortField int32

const (
	GetAccountBalancesRequest_NONE         GetAccountBalancesRequest_SortField = 0
	GetAccountBalancesRequest_ALPHA        GetAccountBalancesRequest_SortField = 1
	GetAccountBalancesRequest_AMOUNT       GetAccountBalancesRequest_SortField = 2
	GetAccountBalancesRequest_MARKET_VALUE GetAccountBalancesRequest_SortField = 3
)

// Enum value maps for GetAccountBalancesRequest_SortField.
var (
	GetAccountBalancesRequest_SortField_name = map[int32]string{
		0: "NONE",
		1: "ALPHA",
		2: "AMOUNT",
		3: "MARKET_VALUE",
	}
	GetAccountBalancesRequest_SortField_value = map[string]int32{
		"NONE":         0,
		"ALPHA":        1,
		"AMOUNT":       2,
		"MARKET_VALUE": 3,
	}
)

func (x GetAccountBalancesRequest_SortField) Enum() *GetAccountBalancesRequest_SortField {
	p := new(GetAccountBalancesRequest_SortField)
	*p = x
	return p
}

func (x GetAccountBalancesRequest_SortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetAccountBalancesRequest_SortField) Descriptor() protoreflect.EnumDescriptor {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[2].Descriptor()
}

func (GetAccountBalancesRequest_SortField) Type() protoreflect.EnumType {
	return &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[2]
}

func (x GetAccountBalancesRequest_SortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetAccountBalancesRequest_SortField.Descriptor instead.
func (GetAccountBalancesRequest_SortField) EnumDescriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{3, 0}
}

type GetAccountBalancesRequest_Option int32

const (
	GetAccountBalancesRequest_EOS_INCLUDE_STAKED GetAccountBalancesRequest_Option = 0
)

// Enum value maps for GetAccountBalancesRequest_Option.
var (
	GetAccountBalancesRequest_Option_name = map[int32]string{
		0: "EOS_INCLUDE_STAKED",
	}
	GetAccountBalancesRequest_Option_value = map[string]int32{
		"EOS_INCLUDE_STAKED": 0,
	}
)

func (x GetAccountBalancesRequest_Option) Enum() *GetAccountBalancesRequest_Option {
	p := new(GetAccountBalancesRequest_Option)
	*p = x
	return p
}

func (x GetAccountBalancesRequest_Option) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetAccountBalancesRequest_Option) Descriptor() protoreflect.EnumDescriptor {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[3].Descriptor()
}

func (GetAccountBalancesRequest_Option) Type() protoreflect.EnumType {
	return &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[3]
}

func (x GetAccountBalancesRequest_Option) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetAccountBalancesRequest_Option.Descriptor instead.
func (GetAccountBalancesRequest_Option) EnumDescriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{3, 1}
}

// You can sort by either: Account alphanumerically, Token Amount, market value of tokens
type GetTokenBalancesRequest_SortField int32

const (
	GetTokenBalancesRequest_NONE         GetTokenBalancesRequest_SortField = 0
	GetTokenBalancesRequest_ALPHA        GetTokenBalancesRequest_SortField = 1
	GetTokenBalancesRequest_AMOUNT       GetTokenBalancesRequest_SortField = 2
	GetTokenBalancesRequest_MARKET_VALUE GetTokenBalancesRequest_SortField = 3
)

// Enum value maps for GetTokenBalancesRequest_SortField.
var (
	GetTokenBalancesRequest_SortField_name = map[int32]string{
		0: "NONE",
		1: "ALPHA",
		2: "AMOUNT",
		3: "MARKET_VALUE",
	}
	GetTokenBalancesRequest_SortField_value = map[string]int32{
		"NONE":         0,
		"ALPHA":        1,
		"AMOUNT":       2,
		"MARKET_VALUE": 3,
	}
)

func (x GetTokenBalancesRequest_SortField) Enum() *GetTokenBalancesRequest_SortField {
	p := new(GetTokenBalancesRequest_SortField)
	*p = x
	return p
}

func (x GetTokenBalancesRequest_SortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTokenBalancesRequest_SortField) Descriptor() protoreflect.EnumDescriptor {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[4].Descriptor()
}

func (GetTokenBalancesRequest_SortField) Type() protoreflect.EnumType {
	return &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[4]
}

func (x GetTokenBalancesRequest_SortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTokenBalancesRequest_SortField.Descriptor instead.
func (GetTokenBalancesRequest_SortField) EnumDescriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{5, 0}
}

type GetTokenBalancesRequest_Option int32

const (
	GetTokenBalancesRequest_EOS_INCLUDE_STAKED GetTokenBalancesRequest_Option = 0
)

// Enum value maps for GetTokenBalancesRequest_Option.
var (
	GetTokenBalancesRequest_Option_name = map[int32]string{
		0: "EOS_INCLUDE_STAKED",
	}
	GetTokenBalancesRequest_Option_value = map[string]int32{
		"EOS_INCLUDE_STAKED": 0,
	}
)

func (x GetTokenBalancesRequest_Option) Enum() *GetTokenBalancesRequest_Option {
	p := new(GetTokenBalancesRequest_Option)
	*p = x
	return p
}

func (x GetTokenBalancesRequest_Option) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTokenBalancesRequest_Option) Descriptor() protoreflect.EnumDescriptor {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[5].Descriptor()
}

func (GetTokenBalancesRequest_Option) Type() protoreflect.EnumType {
	return &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes[5]
}

func (x GetTokenBalancesRequest_Option) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTokenBalancesRequest_Option.Descriptor instead.
func (GetTokenBalancesRequest_Option) EnumDescriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{5, 1}
}

type GetTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit                uint32                     `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"` // 0 means all
	SortOrder            SortOrder                  `protobuf:"varint,2,opt,name=sort_order,json=sortOrder,proto3,enum=dfuse.eosio.tokenmeta.v1.SortOrder" json:"sort_order,omitempty"`
	SortField            GetTokensRequest_SortField `protobuf:"varint,3,opt,name=sort_field,json=sortField,proto3,enum=dfuse.eosio.tokenmeta.v1.GetTokensRequest_SortField" json:"sort_field,omitempty"`
	SecondarySortOrder   SortOrder                  `protobuf:"varint,8,opt,name=secondary_sort_order,json=secondarySortOrder,proto3,enum=dfuse.eosio.tokenmeta.v1.SortOrder" json:"secondary_sort_order,omitempty"`
	SecondarySortField   GetTokensRequest_SortField `protobuf:"varint,9,opt,name=secondary_sort_field,json=secondarySortField,proto3,enum=dfuse.eosio.tokenmeta.v1.GetTokensRequest_SortField" json:"secondary_sort_field,omitempty"`
	FilterTokenSymbols   []string                   `protobuf:"bytes,4,rep,name=filter_token_symbols,json=filterTokenSymbols,proto3" json:"filter_token_symbols,omitempty"`       // all if none
	FilterTokenContracts []string                   `protobuf:"bytes,5,rep,name=filter_token_contracts,json=filterTokenContracts,proto3" json:"filter_token_contracts,omitempty"` // all if none
	BeforeCursor         *TokenCursor               `protobuf:"bytes,6,opt,name=before_cursor,json=beforeCursor,proto3" json:"before_cursor,omitempty"`
	AfterCursor          *TokenCursor               `protobuf:"bytes,7,opt,name=after_cursor,json=afterCursor,proto3" json:"after_cursor,omitempty"`
}

func (x *GetTokensRequest) Reset() {
	*x = GetTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokensRequest) ProtoMessage() {}

func (x *GetTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokensRequest.ProtoReflect.Descriptor instead.
func (*GetTokensRequest) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{0}
}

func (x *GetTokensRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTokensRequest) GetSortOrder() SortOrder {
	if x != nil {
		return x.SortOrder
	}
	return SortOrder_ASC
}

func (x *GetTokensRequest) GetSortField() GetTokensRequest_SortField {
	if x != nil {
		return x.SortField
	}
	return GetTokensRequest_NONE
}

func (x *GetTokensRequest) GetSecondarySortOrder() SortOrder {
	if x != nil {
		return x.SecondarySortOrder
	}
	return SortOrder_ASC
}

func (x *GetTokensRequest) GetSecondarySortField() GetTokensRequest_SortField {
	if x != nil {
		return x.SecondarySortField
	}
	return GetTokensRequest_NONE
}

func (x *GetTokensRequest) GetFilterTokenSymbols() []string {
	if x != nil {
		return x.FilterTokenSymbols
	}
	return nil
}

func (x *GetTokensRequest) GetFilterTokenContracts() []string {
	if x != nil {
		return x.FilterTokenContracts
	}
	return nil
}

func (x *GetTokensRequest) GetBeforeCursor() *TokenCursor {
	if x != nil {
		return x.BeforeCursor
	}
	return nil
}

func (x *GetTokensRequest) GetAfterCursor() *TokenCursor {
	if x != nil {
		return x.AfterCursor
	}
	return nil
}

type TokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens     []*Token `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	AtBlockNum uint64   `protobuf:"varint,2,opt,name=atBlockNum,proto3" json:"atBlockNum,omitempty"`
	AtBlockId  string   `protobuf:"bytes,3,opt,name=atBlockId,proto3" json:"atBlockId,omitempty"`
}

func (x *TokensResponse) Reset() {
	*x = TokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokensResponse) ProtoMessage() {}

func (x *TokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokensResponse.ProtoReflect.Descriptor instead.
func (*TokensResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{1}
}

func (x *TokensResponse) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *TokensResponse) GetAtBlockNum() uint64 {
	if x != nil {
		return x.AtBlockNum
	}
	return 0
}

func (x *TokensResponse) GetAtBlockId() string {
	if x != nil {
		return x.AtBlockId
	}
	return ""
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract      string `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`                                 // name of contract, who'se `abi` contains `stat` and `account` with the proper struct.
	Symbol        string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`                                     // from maximum_supply or total_supply
	Precision     uint32 `protobuf:"varint,3,opt,name=precision,proto3" json:"precision,omitempty"`                              // from maximum supply or total supply
	Issuer        string `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`                                     // from `stat` table
	MaximumSupply uint64 `protobuf:"varint,5,opt,name=maximum_supply,json=maximumSupply,proto3" json:"maximum_supply,omitempty"` // from `stat` table
	TotalSupply   uint64 `protobuf:"varint,6,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`       // from `stat` table
	Holders       uint64 `protobuf:"varint,7,opt,name=holders,proto3" json:"holders,omitempty"`                                  // present on `block_dog`, could be fetched from `scopes` from `fluxdb`, and kept in sync with block logs.
	// Eventually:
	MarketCap uint64 `protobuf:"varint,8,opt,name=market_cap,json=marketCap,proto3" json:"market_cap,omitempty"` // In USD cents (precision = 2). Taken from some exchanges or whatnot. Zero means unknown.
	Website   string `protobuf:"bytes,9,opt,name=website,proto3" json:"website,omitempty"`                       // URL to the website, according to whatever site.
	Logo      string `protobuf:"bytes,10,opt,name=logo,proto3" json:"logo,omitempty"`                            // URL to a logo, hosted somewhere
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{2}
}

func (x *Token) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *Token) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Token) GetPrecision() uint32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *Token) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *Token) GetMaximumSupply() uint64 {
	if x != nil {
		return x.MaximumSupply
	}
	return 0
}

func (x *Token) GetTotalSupply() uint64 {
	if x != nil {
		return x.TotalSupply
	}
	return 0
}

func (x *Token) GetHolders() uint64 {
	if x != nil {
		return x.Holders
	}
	return 0
}

func (x *Token) GetMarketCap() uint64 {
	if x != nil {
		return x.MarketCap
	}
	return 0
}

func (x *Token) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *Token) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

type GetAccountBalancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account              string                              `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` // Get all Assets contract.symbol for a given account (eoscanadadad)
	Limit                uint32                              `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`    // 0 means all
	SortOrder            SortOrder                           `protobuf:"varint,3,opt,name=sort_order,json=sortOrder,proto3,enum=dfuse.eosio.tokenmeta.v1.SortOrder" json:"sort_order,omitempty"`
	SortField            GetAccountBalancesRequest_SortField `protobuf:"varint,4,opt,name=sort_field,json=sortField,proto3,enum=dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest_SortField" json:"sort_field,omitempty"`
	SecondarySortOrder   SortOrder                           `protobuf:"varint,10,opt,name=secondary_sort_order,json=secondarySortOrder,proto3,enum=dfuse.eosio.tokenmeta.v1.SortOrder" json:"secondary_sort_order,omitempty"`
	SecondarySortField   GetAccountBalancesRequest_SortField `protobuf:"varint,11,opt,name=secondary_sort_field,json=secondarySortField,proto3,enum=dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest_SortField" json:"secondary_sort_field,omitempty"`
	FilterTokenContracts []string                            `protobuf:"bytes,5,rep,name=filter_token_contracts,json=filterTokenContracts,proto3" json:"filter_token_contracts,omitempty"` // All if none
	FilterTokenSymbols   []string                            `protobuf:"bytes,6,rep,name=filter_token_symbols,json=filterTokenSymbols,proto3" json:"filter_token_symbols,omitempty"`       // All if none
	Options              []GetAccountBalancesRequest_Option  `protobuf:"varint,9,rep,packed,name=options,proto3,enum=dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest_Option" json:"options,omitempty"`
	BeforeCursor         *AccountBalanceCursor               `protobuf:"bytes,7,opt,name=before_cursor,json=beforeCursor,proto3" json:"before_cursor,omitempty"`
	AfterCursor          *AccountBalanceCursor               `protobuf:"bytes,8,opt,name=after_cursor,json=afterCursor,proto3" json:"after_cursor,omitempty"`
}

func (x *GetAccountBalancesRequest) Reset() {
	*x = GetAccountBalancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountBalancesRequest) ProtoMessage() {}

func (x *GetAccountBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountBalancesRequest.ProtoReflect.Descriptor instead.
func (*GetAccountBalancesRequest) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{3}
}

func (x *GetAccountBalancesRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetAccountBalancesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAccountBalancesRequest) GetSortOrder() SortOrder {
	if x != nil {
		return x.SortOrder
	}
	return SortOrder_ASC
}

func (x *GetAccountBalancesRequest) GetSortField() GetAccountBalancesRequest_SortField {
	if x != nil {
		return x.SortField
	}
	return GetAccountBalancesRequest_NONE
}

func (x *GetAccountBalancesRequest) GetSecondarySortOrder() SortOrder {
	if x != nil {
		return x.SecondarySortOrder
	}
	return SortOrder_ASC
}

func (x *GetAccountBalancesRequest) GetSecondarySortField() GetAccountBalancesRequest_SortField {
	if x != nil {
		return x.SecondarySortField
	}
	return GetAccountBalancesRequest_NONE
}

func (x *GetAccountBalancesRequest) GetFilterTokenContracts() []string {
	if x != nil {
		return x.FilterTokenContracts
	}
	return nil
}

func (x *GetAccountBalancesRequest) GetFilterTokenSymbols() []string {
	if x != nil {
		return x.FilterTokenSymbols
	}
	return nil
}

func (x *GetAccountBalancesRequest) GetOptions() []GetAccountBalancesRequest_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GetAccountBalancesRequest) GetBeforeCursor() *AccountBalanceCursor {
	if x != nil {
		return x.BeforeCursor
	}
	return nil
}

func (x *GetAccountBalancesRequest) GetAfterCursor() *AccountBalanceCursor {
	if x != nil {
		return x.AfterCursor
	}
	return nil
}

type AccountBalancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balances   []*AccountBalance `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	AtBlockNum uint64            `protobuf:"varint,2,opt,name=atBlockNum,proto3" json:"atBlockNum,omitempty"`
	AtBlockId  string            `protobuf:"bytes,3,opt,name=atBlockId,proto3" json:"atBlockId,omitempty"`
}

func (x *AccountBalancesResponse) Reset() {
	*x = AccountBalancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountBalancesResponse) ProtoMessage() {}

func (x *AccountBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountBalancesResponse.ProtoReflect.Descriptor instead.
func (*AccountBalancesResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{4}
}

func (x *AccountBalancesResponse) GetBalances() []*AccountBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *AccountBalancesResponse) GetAtBlockNum() uint64 {
	if x != nil {
		return x.AtBlockNum
	}
	return 0
}

func (x *AccountBalancesResponse) GetAtBlockId() string {
	if x != nil {
		return x.AtBlockId
	}
	return ""
}

type GetTokenBalancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenContract        string                            `protobuf:"bytes,1,opt,name=token_contract,json=tokenContract,proto3" json:"token_contract,omitempty"`
	Limit                uint32                            `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` // 0 means all
	SortOrder            SortOrder                         `protobuf:"varint,3,opt,name=sort_order,json=sortOrder,proto3,enum=dfuse.eosio.tokenmeta.v1.SortOrder" json:"sort_order,omitempty"`
	SortField            GetTokenBalancesRequest_SortField `protobuf:"varint,4,opt,name=sort_field,json=sortField,proto3,enum=dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest_SortField" json:"sort_field,omitempty"`
	SecondarySortOrder   SortOrder                         `protobuf:"varint,10,opt,name=secondary_sort_order,json=secondarySortOrder,proto3,enum=dfuse.eosio.tokenmeta.v1.SortOrder" json:"secondary_sort_order,omitempty"`
	SecondarySortField   GetTokenBalancesRequest_SortField `protobuf:"varint,11,opt,name=secondary_sort_field,json=secondarySortField,proto3,enum=dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest_SortField" json:"secondary_sort_field,omitempty"`
	FilterTokenSymbols   []string                          `protobuf:"bytes,5,rep,name=filter_token_symbols,json=filterTokenSymbols,proto3" json:"filter_token_symbols,omitempty"`       // All if none
	FilterHolderAccounts []string                          `protobuf:"bytes,6,rep,name=filter_holder_accounts,json=filterHolderAccounts,proto3" json:"filter_holder_accounts,omitempty"` // All if none
	Options              []GetTokenBalancesRequest_Option  `protobuf:"varint,9,rep,packed,name=options,proto3,enum=dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest_Option" json:"options,omitempty"`
	BeforeCursor         *AccountBalanceCursor             `protobuf:"bytes,7,opt,name=before_cursor,json=beforeCursor,proto3" json:"before_cursor,omitempty"`
	AfterCursor          *AccountBalanceCursor             `protobuf:"bytes,8,opt,name=after_cursor,json=afterCursor,proto3" json:"after_cursor,omitempty"`
}

func (x *GetTokenBalancesRequest) Reset() {
	*x = GetTokenBalancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenBalancesRequest) ProtoMessage() {}

func (x *GetTokenBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenBalancesRequest.ProtoReflect.Descriptor instead.
func (*GetTokenBalancesRequest) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{5}
}

func (x *GetTokenBalancesRequest) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *GetTokenBalancesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTokenBalancesRequest) GetSortOrder() SortOrder {
	if x != nil {
		return x.SortOrder
	}
	return SortOrder_ASC
}

func (x *GetTokenBalancesRequest) GetSortField() GetTokenBalancesRequest_SortField {
	if x != nil {
		return x.SortField
	}
	return GetTokenBalancesRequest_NONE
}

func (x *GetTokenBalancesRequest) GetSecondarySortOrder() SortOrder {
	if x != nil {
		return x.SecondarySortOrder
	}
	return SortOrder_ASC
}

func (x *GetTokenBalancesRequest) GetSecondarySortField() GetTokenBalancesRequest_SortField {
	if x != nil {
		return x.SecondarySortField
	}
	return GetTokenBalancesRequest_NONE
}

func (x *GetTokenBalancesRequest) GetFilterTokenSymbols() []string {
	if x != nil {
		return x.FilterTokenSymbols
	}
	return nil
}

func (x *GetTokenBalancesRequest) GetFilterHolderAccounts() []string {
	if x != nil {
		return x.FilterHolderAccounts
	}
	return nil
}

func (x *GetTokenBalancesRequest) GetOptions() []GetTokenBalancesRequest_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GetTokenBalancesRequest) GetBeforeCursor() *AccountBalanceCursor {
	if x != nil {
		return x.BeforeCursor
	}
	return nil
}

func (x *GetTokenBalancesRequest) GetAfterCursor() *AccountBalanceCursor {
	if x != nil {
		return x.AfterCursor
	}
	return nil
}

type TokenBalancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens     []*TokenContractBalancesResponse `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"` // All if none
	AtBlockNum uint64                           `protobuf:"varint,2,opt,name=atBlockNum,proto3" json:"atBlockNum,omitempty"`
	AtBlockId  string                           `protobuf:"bytes,3,opt,name=atBlockId,proto3" json:"atBlockId,omitempty"`
}

func (x *TokenBalancesResponse) Reset() {
	*x = TokenBalancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBalancesResponse) ProtoMessage() {}

func (x *TokenBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBalancesResponse.ProtoReflect.Descriptor instead.
func (*TokenBalancesResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{6}
}

func (x *TokenBalancesResponse) GetTokens() []*TokenContractBalancesResponse {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *TokenBalancesResponse) GetAtBlockNum() uint64 {
	if x != nil {
		return x.AtBlockNum
	}
	return 0
}

func (x *TokenBalancesResponse) GetAtBlockId() string {
	if x != nil {
		return x.AtBlockId
	}
	return ""
}

type TokenContractBalancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    *Token            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Balances []*AccountBalance `protobuf:"bytes,2,rep,name=balances,proto3" json:"balances,omitempty"`
}

func (x *TokenContractBalancesResponse) Reset() {
	*x = TokenContractBalancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenContractBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenContractBalancesResponse) ProtoMessage() {}

func (x *TokenContractBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenContractBalancesResponse.ProtoReflect.Descriptor instead.
func (*TokenContractBalancesResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{7}
}

func (x *TokenContractBalancesResponse) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *TokenContractBalancesResponse) GetBalances() []*AccountBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

type AccountBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenContract string `protobuf:"bytes,1,opt,name=token_contract,json=tokenContract,proto3" json:"token_contract,omitempty"`
	Account       string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Amount        uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Precision     uint32 `protobuf:"varint,4,opt,name=precision,proto3" json:"precision,omitempty"`
	Symbol        string `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *AccountBalance) Reset() {
	*x = AccountBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountBalance) ProtoMessage() {}

func (x *AccountBalance) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountBalance.ProtoReflect.Descriptor instead.
func (*AccountBalance) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{8}
}

func (x *AccountBalance) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *AccountBalance) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AccountBalance) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AccountBalance) GetPrecision() uint32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *AccountBalance) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type TransactionCursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ver              int32  `protobuf:"varint,1,opt,name=ver,proto3" json:"ver,omitempty"`
	TransactionIndex uint32 `protobuf:"varint,2,opt,name=transactionIndex,proto3" json:"transactionIndex,omitempty"`
	TransactionHash  string `protobuf:"bytes,3,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
}

func (x *TransactionCursor) Reset() {
	*x = TransactionCursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionCursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionCursor) ProtoMessage() {}

func (x *TransactionCursor) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionCursor.ProtoReflect.Descriptor instead.
func (*TransactionCursor) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{9}
}

func (x *TransactionCursor) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *TransactionCursor) GetTransactionIndex() uint32 {
	if x != nil {
		return x.TransactionIndex
	}
	return 0
}

func (x *TransactionCursor) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

type TokenCursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ver      int32  `protobuf:"varint,1,opt,name=ver,proto3" json:"ver,omitempty"`
	Contract string `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	Symbol   string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *TokenCursor) Reset() {
	*x = TokenCursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenCursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenCursor) ProtoMessage() {}

func (x *TokenCursor) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenCursor.ProtoReflect.Descriptor instead.
func (*TokenCursor) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{10}
}

func (x *TokenCursor) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *TokenCursor) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *TokenCursor) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type AccountBalanceCursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ver      int32  `protobuf:"varint,1,opt,name=ver,proto3" json:"ver,omitempty"`
	Contract string `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	Symbol   string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Account  string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *AccountBalanceCursor) Reset() {
	*x = AccountBalanceCursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountBalanceCursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountBalanceCursor) ProtoMessage() {}

func (x *AccountBalanceCursor) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountBalanceCursor.ProtoReflect.Descriptor instead.
func (*AccountBalanceCursor) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP(), []int{11}
}

func (x *AccountBalanceCursor) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *AccountBalanceCursor) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *AccountBalanceCursor) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AccountBalanceCursor) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

var File_dfuse_eosio_tokenmeta_v1_tokenmeta_proto protoreflect.FileDescriptor

var file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDesc = []byte{
	0x0a, 0x28, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2f, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x64, 0x66, 0x75, 0x73,
	0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x22, 0xbd, 0x05, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x42, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69,
	0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e,
	0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x55, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65,
	0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x12, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x66, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x6f, 0x72,
	0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e,
	0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x53, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12,
	0x4a, 0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65,
	0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x0c, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x0c, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x3d, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x4c, 0x50, 0x48, 0x41, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x4f, 0x4c, 0x44, 0x45,
	0x52, 0x53, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x5f, 0x43,
	0x41, 0x50, 0x10, 0x03, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e,
	0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x22, 0xa2,
	0x02, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x73, 0x75,
	0x70, 0x70, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x69,
	0x6d, 0x75, 0x6d, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x5f, 0x63, 0x61, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x43, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x6f, 0x67, 0x6f, 0x22, 0xfd, 0x06, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x42, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f,
	0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x5c, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x64, 0x66, 0x75, 0x73,
	0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x55, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x6f, 0x0a, 0x14, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65,
	0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x73, 0x12, 0x54, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73,
	0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53, 0x0a, 0x0d, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x52, 0x0c, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x51,
	0x0a, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73,
	0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x22, 0x3e, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x50, 0x48,
	0x41, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10,
	0x03, 0x22, 0x20, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x45,
	0x4f, 0x53, 0x5f, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x4b, 0x45,
	0x44, 0x10, 0x00, 0x22, 0x9d, 0x01, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x22, 0x82, 0x07, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x42, 0x0a, 0x0a,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x5a, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73,
	0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x55, 0x0a, 0x14,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x64, 0x66, 0x75,
	0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x6d, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3b, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x12,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x12, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x64, 0x66,
	0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53,
	0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f,
	0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x0c, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x66, 0x75, 0x73,
	0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x3e, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4d, 0x4f, 0x55,
	0x4e, 0x54, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x5f, 0x56,
	0x41, 0x4c, 0x55, 0x45, 0x10, 0x03, 0x22, 0x20, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x12, 0x45, 0x4f, 0x53, 0x5f, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x4b, 0x45, 0x44, 0x10, 0x00, 0x22, 0xa6, 0x01, 0x0a, 0x15, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f,
	0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x22, 0x9c, 0x01, 0x0a, 0x1d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f,
	0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x44, 0x0a, 0x08, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64,
	0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x22, 0x9f, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x22, 0x7b, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x53, 0x0a, 0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x76, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x1e, 0x0a, 0x09,
	0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x32, 0xe4, 0x02, 0x0a,
	0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x61, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2a, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e,
	0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69,
	0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69,
	0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65,
	0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x31, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f,
	0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x73, 0x68, 0x75, 0x77, 0x65, 0x6e, 0x2f, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x65, 0x78, 0x70, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x66, 0x75, 0x73,
	0x65, 0x2f, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74,
	0x61, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x6d, 0x65, 0x74, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescOnce sync.Once
	file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescData = file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDesc
)

func file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescGZIP() []byte {
	file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescOnce.Do(func() {
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescData = protoimpl.X.CompressGZIP(file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescData)
	})
	return file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDescData
}

var file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_goTypes = []interface{}{
	(SortOrder)(0),                           // 0: dfuse.eosio.tokenmeta.v1.SortOrder
	(GetTokensRequest_SortField)(0),          // 1: dfuse.eosio.tokenmeta.v1.GetTokensRequest.SortField
	(GetAccountBalancesRequest_SortField)(0), // 2: dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.SortField
	(GetAccountBalancesRequest_Option)(0),    // 3: dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.Option
	(GetTokenBalancesRequest_SortField)(0),   // 4: dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.SortField
	(GetTokenBalancesRequest_Option)(0),      // 5: dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.Option
	(*GetTokensRequest)(nil),                 // 6: dfuse.eosio.tokenmeta.v1.GetTokensRequest
	(*TokensResponse)(nil),                   // 7: dfuse.eosio.tokenmeta.v1.TokensResponse
	(*Token)(nil),                            // 8: dfuse.eosio.tokenmeta.v1.Token
	(*GetAccountBalancesRequest)(nil),        // 9: dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest
	(*AccountBalancesResponse)(nil),          // 10: dfuse.eosio.tokenmeta.v1.AccountBalancesResponse
	(*GetTokenBalancesRequest)(nil),          // 11: dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest
	(*TokenBalancesResponse)(nil),            // 12: dfuse.eosio.tokenmeta.v1.TokenBalancesResponse
	(*TokenContractBalancesResponse)(nil),    // 13: dfuse.eosio.tokenmeta.v1.TokenContractBalancesResponse
	(*AccountBalance)(nil),                   // 14: dfuse.eosio.tokenmeta.v1.AccountBalance
	(*TransactionCursor)(nil),                // 15: dfuse.eosio.tokenmeta.v1.TransactionCursor
	(*TokenCursor)(nil),                      // 16: dfuse.eosio.tokenmeta.v1.TokenCursor
	(*AccountBalanceCursor)(nil),             // 17: dfuse.eosio.tokenmeta.v1.AccountBalanceCursor
}
var file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_depIdxs = []int32{
	0,  // 0: dfuse.eosio.tokenmeta.v1.GetTokensRequest.sort_order:type_name -> dfuse.eosio.tokenmeta.v1.SortOrder
	1,  // 1: dfuse.eosio.tokenmeta.v1.GetTokensRequest.sort_field:type_name -> dfuse.eosio.tokenmeta.v1.GetTokensRequest.SortField
	0,  // 2: dfuse.eosio.tokenmeta.v1.GetTokensRequest.secondary_sort_order:type_name -> dfuse.eosio.tokenmeta.v1.SortOrder
	1,  // 3: dfuse.eosio.tokenmeta.v1.GetTokensRequest.secondary_sort_field:type_name -> dfuse.eosio.tokenmeta.v1.GetTokensRequest.SortField
	16, // 4: dfuse.eosio.tokenmeta.v1.GetTokensRequest.before_cursor:type_name -> dfuse.eosio.tokenmeta.v1.TokenCursor
	16, // 5: dfuse.eosio.tokenmeta.v1.GetTokensRequest.after_cursor:type_name -> dfuse.eosio.tokenmeta.v1.TokenCursor
	8,  // 6: dfuse.eosio.tokenmeta.v1.TokensResponse.tokens:type_name -> dfuse.eosio.tokenmeta.v1.Token
	0,  // 7: dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.sort_order:type_name -> dfuse.eosio.tokenmeta.v1.SortOrder
	2,  // 8: dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.sort_field:type_name -> dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.SortField
	0,  // 9: dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.secondary_sort_order:type_name -> dfuse.eosio.tokenmeta.v1.SortOrder
	2,  // 10: dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.secondary_sort_field:type_name -> dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.SortField
	3,  // 11: dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.options:type_name -> dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.Option
	17, // 12: dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.before_cursor:type_name -> dfuse.eosio.tokenmeta.v1.AccountBalanceCursor
	17, // 13: dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest.after_cursor:type_name -> dfuse.eosio.tokenmeta.v1.AccountBalanceCursor
	14, // 14: dfuse.eosio.tokenmeta.v1.AccountBalancesResponse.balances:type_name -> dfuse.eosio.tokenmeta.v1.AccountBalance
	0,  // 15: dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.sort_order:type_name -> dfuse.eosio.tokenmeta.v1.SortOrder
	4,  // 16: dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.sort_field:type_name -> dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.SortField
	0,  // 17: dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.secondary_sort_order:type_name -> dfuse.eosio.tokenmeta.v1.SortOrder
	4,  // 18: dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.secondary_sort_field:type_name -> dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.SortField
	5,  // 19: dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.options:type_name -> dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.Option
	17, // 20: dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.before_cursor:type_name -> dfuse.eosio.tokenmeta.v1.AccountBalanceCursor
	17, // 21: dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest.after_cursor:type_name -> dfuse.eosio.tokenmeta.v1.AccountBalanceCursor
	13, // 22: dfuse.eosio.tokenmeta.v1.TokenBalancesResponse.tokens:type_name -> dfuse.eosio.tokenmeta.v1.TokenContractBalancesResponse
	8,  // 23: dfuse.eosio.tokenmeta.v1.TokenContractBalancesResponse.token:type_name -> dfuse.eosio.tokenmeta.v1.Token
	14, // 24: dfuse.eosio.tokenmeta.v1.TokenContractBalancesResponse.balances:type_name -> dfuse.eosio.tokenmeta.v1.AccountBalance
	6,  // 25: dfuse.eosio.tokenmeta.v1.TokenMeta.GetTokens:input_type -> dfuse.eosio.tokenmeta.v1.GetTokensRequest
	9,  // 26: dfuse.eosio.tokenmeta.v1.TokenMeta.GetAccountBalances:input_type -> dfuse.eosio.tokenmeta.v1.GetAccountBalancesRequest
	11, // 27: dfuse.eosio.tokenmeta.v1.TokenMeta.GetTokenBalances:input_type -> dfuse.eosio.tokenmeta.v1.GetTokenBalancesRequest
	7,  // 28: dfuse.eosio.tokenmeta.v1.TokenMeta.GetTokens:output_type -> dfuse.eosio.tokenmeta.v1.TokensResponse
	10, // 29: dfuse.eosio.tokenmeta.v1.TokenMeta.GetAccountBalances:output_type -> dfuse.eosio.tokenmeta.v1.AccountBalancesResponse
	12, // 30: dfuse.eosio.tokenmeta.v1.TokenMeta.GetTokenBalances:output_type -> dfuse.eosio.tokenmeta.v1.TokenBalancesResponse
	28, // [28:31] is the sub-list for method output_type
	25, // [25:28] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_init() }
func file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_init() {
	if File_dfuse_eosio_tokenmeta_v1_tokenmeta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountBalancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountBalancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenBalancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenBalancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenContractBalancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionCursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenCursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountBalanceCursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_goTypes,
		DependencyIndexes: file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_depIdxs,
		EnumInfos:         file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_enumTypes,
		MessageInfos:      file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_msgTypes,
	}.Build()
	File_dfuse_eosio_tokenmeta_v1_tokenmeta_proto = out.File
	file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_rawDesc = nil
	file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_goTypes = nil
	file_dfuse_eosio_tokenmeta_v1_tokenmeta_proto_depIdxs = nil
}
