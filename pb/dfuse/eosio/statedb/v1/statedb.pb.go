// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: dfuse/eosio/statedb/v1/statedb.proto

package pbstatedb

import (
	v1 "github.com/dfuse-io/pbgo/dfuse/bstream/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetABIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract string `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	BlockNum uint64 `protobuf:"varint,2,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	ToJson   bool   `protobuf:"varint,3,opt,name=to_json,json=toJson,proto3" json:"to_json,omitempty"`
}

func (x *GetABIRequest) Reset() {
	*x = GetABIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetABIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetABIRequest) ProtoMessage() {}

func (x *GetABIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetABIRequest.ProtoReflect.Descriptor instead.
func (*GetABIRequest) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{0}
}

func (x *GetABIRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *GetABIRequest) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *GetABIRequest) GetToJson() bool {
	if x != nil {
		return x.ToJson
	}
	return false
}

type GetABIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum uint64 `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	RawAbi   []byte `protobuf:"bytes,2,opt,name=raw_abi,json=rawAbi,proto3" json:"raw_abi,omitempty"`
	JsonAbi  string `protobuf:"bytes,3,opt,name=json_abi,json=jsonAbi,proto3" json:"json_abi,omitempty"`
}

func (x *GetABIResponse) Reset() {
	*x = GetABIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetABIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetABIResponse) ProtoMessage() {}

func (x *GetABIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetABIResponse.ProtoReflect.Descriptor instead.
func (*GetABIResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{1}
}

func (x *GetABIResponse) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *GetABIResponse) GetRawAbi() []byte {
	if x != nil {
		return x.RawAbi
	}
	return nil
}

func (x *GetABIResponse) GetJsonAbi() string {
	if x != nil {
		return x.JsonAbi
	}
	return ""
}

type GetKeyAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	BlockNum  uint64 `protobuf:"varint,2,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
}

func (x *GetKeyAccountsRequest) Reset() {
	*x = GetKeyAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyAccountsRequest) ProtoMessage() {}

func (x *GetKeyAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetKeyAccountsRequest) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{2}
}

func (x *GetKeyAccountsRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *GetKeyAccountsRequest) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

type GetKeyAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum uint64   `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	Accounts []string `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *GetKeyAccountsResponse) Reset() {
	*x = GetKeyAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyAccountsResponse) ProtoMessage() {}

func (x *GetKeyAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetKeyAccountsResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{3}
}

func (x *GetKeyAccountsResponse) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *GetKeyAccountsResponse) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type GetPermissionLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum uint64 `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	Account  string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetPermissionLinksRequest) Reset() {
	*x = GetPermissionLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionLinksRequest) ProtoMessage() {}

func (x *GetPermissionLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionLinksRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionLinksRequest) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{4}
}

func (x *GetPermissionLinksRequest) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *GetPermissionLinksRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type GetPermissionLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpToBlock             *v1.BlockRef        `protobuf:"bytes,1,opt,name=up_to_block,json=upToBlock,proto3" json:"up_to_block,omitempty"`
	LastIrreversibleBlock *v1.BlockRef        `protobuf:"bytes,2,opt,name=last_irreversible_block,json=lastIrreversibleBlock,proto3" json:"last_irreversible_block,omitempty"`
	Permissions           []*LinkedPermission `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *GetPermissionLinksResponse) Reset() {
	*x = GetPermissionLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionLinksResponse) ProtoMessage() {}

func (x *GetPermissionLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionLinksResponse.ProtoReflect.Descriptor instead.
func (*GetPermissionLinksResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{5}
}

func (x *GetPermissionLinksResponse) GetUpToBlock() *v1.BlockRef {
	if x != nil {
		return x.UpToBlock
	}
	return nil
}

func (x *GetPermissionLinksResponse) GetLastIrreversibleBlock() *v1.BlockRef {
	if x != nil {
		return x.LastIrreversibleBlock
	}
	return nil
}

func (x *GetPermissionLinksResponse) GetPermissions() []*LinkedPermission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type LinkedPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract       string `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Action         string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	PermissionName string `protobuf:"bytes,3,opt,name=permission_name,json=permissionName,proto3" json:"permission_name,omitempty"`
}

func (x *LinkedPermission) Reset() {
	*x = LinkedPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedPermission) ProtoMessage() {}

func (x *LinkedPermission) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedPermission.ProtoReflect.Descriptor instead.
func (*LinkedPermission) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{6}
}

func (x *LinkedPermission) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *LinkedPermission) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *LinkedPermission) GetPermissionName() string {
	if x != nil {
		return x.PermissionName
	}
	return ""
}

type GetTableRowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum         uint64 `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	KeyType          string `protobuf:"bytes,2,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	ToJson           bool   `protobuf:"varint,3,opt,name=to_json,json=toJson,proto3" json:"to_json,omitempty"`
	WithBlockNum     bool   `protobuf:"varint,4,opt,name=with_block_num,json=withBlockNum,proto3" json:"with_block_num,omitempty"`
	IrreversibleOnly bool   `protobuf:"varint,5,opt,name=irreversible_only,json=irreversibleOnly,proto3" json:"irreversible_only,omitempty"`
	Contract         string `protobuf:"bytes,6,opt,name=contract,proto3" json:"contract,omitempty"`
	Table            string `protobuf:"bytes,7,opt,name=table,proto3" json:"table,omitempty"`
	Scope            string `protobuf:"bytes,8,opt,name=scope,proto3" json:"scope,omitempty"`
	PrimaryKey       string `protobuf:"bytes,9,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
}

func (x *GetTableRowRequest) Reset() {
	*x = GetTableRowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableRowRequest) ProtoMessage() {}

func (x *GetTableRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableRowRequest.ProtoReflect.Descriptor instead.
func (*GetTableRowRequest) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{7}
}

func (x *GetTableRowRequest) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *GetTableRowRequest) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *GetTableRowRequest) GetToJson() bool {
	if x != nil {
		return x.ToJson
	}
	return false
}

func (x *GetTableRowRequest) GetWithBlockNum() bool {
	if x != nil {
		return x.WithBlockNum
	}
	return false
}

func (x *GetTableRowRequest) GetIrreversibleOnly() bool {
	if x != nil {
		return x.IrreversibleOnly
	}
	return false
}

func (x *GetTableRowRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *GetTableRowRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *GetTableRowRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *GetTableRowRequest) GetPrimaryKey() string {
	if x != nil {
		return x.PrimaryKey
	}
	return ""
}

type GetTableRowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpToBlock             *v1.BlockRef      `protobuf:"bytes,1,opt,name=up_to_block,json=upToBlock,proto3" json:"up_to_block,omitempty"`
	LastIrreversibleBlock *v1.BlockRef      `protobuf:"bytes,2,opt,name=last_irreversible_block,json=lastIrreversibleBlock,proto3" json:"last_irreversible_block,omitempty"`
	Row                   *TableRowResponse `protobuf:"bytes,3,opt,name=row,proto3" json:"row,omitempty"`
}

func (x *GetTableRowResponse) Reset() {
	*x = GetTableRowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableRowResponse) ProtoMessage() {}

func (x *GetTableRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableRowResponse.ProtoReflect.Descriptor instead.
func (*GetTableRowResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{8}
}

func (x *GetTableRowResponse) GetUpToBlock() *v1.BlockRef {
	if x != nil {
		return x.UpToBlock
	}
	return nil
}

func (x *GetTableRowResponse) GetLastIrreversibleBlock() *v1.BlockRef {
	if x != nil {
		return x.LastIrreversibleBlock
	}
	return nil
}

func (x *GetTableRowResponse) GetRow() *TableRowResponse {
	if x != nil {
		return x.Row
	}
	return nil
}

type StreamTableRowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum         uint64 `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	KeyType          string `protobuf:"bytes,2,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	ToJson           bool   `protobuf:"varint,3,opt,name=to_json,json=toJson,proto3" json:"to_json,omitempty"`
	WithBlockNum     bool   `protobuf:"varint,4,opt,name=with_block_num,json=withBlockNum,proto3" json:"with_block_num,omitempty"`
	IrreversibleOnly bool   `protobuf:"varint,5,opt,name=irreversible_only,json=irreversibleOnly,proto3" json:"irreversible_only,omitempty"`
	Contract         string `protobuf:"bytes,6,opt,name=contract,proto3" json:"contract,omitempty"`
	Table            string `protobuf:"bytes,7,opt,name=table,proto3" json:"table,omitempty"`
	Scope            string `protobuf:"bytes,8,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *StreamTableRowsRequest) Reset() {
	*x = StreamTableRowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamTableRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTableRowsRequest) ProtoMessage() {}

func (x *StreamTableRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTableRowsRequest.ProtoReflect.Descriptor instead.
func (*StreamTableRowsRequest) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{9}
}

func (x *StreamTableRowsRequest) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *StreamTableRowsRequest) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *StreamTableRowsRequest) GetToJson() bool {
	if x != nil {
		return x.ToJson
	}
	return false
}

func (x *StreamTableRowsRequest) GetWithBlockNum() bool {
	if x != nil {
		return x.WithBlockNum
	}
	return false
}

func (x *StreamTableRowsRequest) GetIrreversibleOnly() bool {
	if x != nil {
		return x.IrreversibleOnly
	}
	return false
}

func (x *StreamTableRowsRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *StreamTableRowsRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *StreamTableRowsRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type TableRowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data        []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Json        string `protobuf:"bytes,3,opt,name=json,proto3" json:"json,omitempty"`
	Payer       string `protobuf:"bytes,4,opt,name=payer,proto3" json:"payer,omitempty"`
	BlockNumber uint64 `protobuf:"varint,5,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *TableRowResponse) Reset() {
	*x = TableRowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableRowResponse) ProtoMessage() {}

func (x *TableRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableRowResponse.ProtoReflect.Descriptor instead.
func (*TableRowResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{10}
}

func (x *TableRowResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TableRowResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TableRowResponse) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

func (x *TableRowResponse) GetPayer() string {
	if x != nil {
		return x.Payer
	}
	return ""
}

func (x *TableRowResponse) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

type StreamTableScopesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum uint64 `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	Contract string `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	Table    string `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *StreamTableScopesRequest) Reset() {
	*x = StreamTableScopesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamTableScopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTableScopesRequest) ProtoMessage() {}

func (x *StreamTableScopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTableScopesRequest.ProtoReflect.Descriptor instead.
func (*StreamTableScopesRequest) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{11}
}

func (x *StreamTableScopesRequest) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *StreamTableScopesRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *StreamTableScopesRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

type TableScopeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum uint64 `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	Scope    string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *TableScopeResponse) Reset() {
	*x = TableScopeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableScopeResponse) ProtoMessage() {}

func (x *TableScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableScopeResponse.ProtoReflect.Descriptor instead.
func (*TableScopeResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{12}
}

func (x *TableScopeResponse) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *TableScopeResponse) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type StreamMultiScopesTableRowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum         uint64   `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	Contract         string   `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	Table            string   `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	KeyType          string   `protobuf:"bytes,4,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	ToJson           bool     `protobuf:"varint,5,opt,name=to_json,json=toJson,proto3" json:"to_json,omitempty"`
	WithBlockNum     bool     `protobuf:"varint,6,opt,name=with_block_num,json=withBlockNum,proto3" json:"with_block_num,omitempty"`
	IrreversibleOnly bool     `protobuf:"varint,7,opt,name=irreversible_only,json=irreversibleOnly,proto3" json:"irreversible_only,omitempty"`
	Scopes           []string `protobuf:"bytes,8,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *StreamMultiScopesTableRowsRequest) Reset() {
	*x = StreamMultiScopesTableRowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMultiScopesTableRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMultiScopesTableRowsRequest) ProtoMessage() {}

func (x *StreamMultiScopesTableRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMultiScopesTableRowsRequest.ProtoReflect.Descriptor instead.
func (*StreamMultiScopesTableRowsRequest) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{13}
}

func (x *StreamMultiScopesTableRowsRequest) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *StreamMultiScopesTableRowsRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *StreamMultiScopesTableRowsRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *StreamMultiScopesTableRowsRequest) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *StreamMultiScopesTableRowsRequest) GetToJson() bool {
	if x != nil {
		return x.ToJson
	}
	return false
}

func (x *StreamMultiScopesTableRowsRequest) GetWithBlockNum() bool {
	if x != nil {
		return x.WithBlockNum
	}
	return false
}

func (x *StreamMultiScopesTableRowsRequest) GetIrreversibleOnly() bool {
	if x != nil {
		return x.IrreversibleOnly
	}
	return false
}

func (x *StreamMultiScopesTableRowsRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type StreamMultiContractsTableRowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum         uint64   `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	Scope            string   `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	Table            string   `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	KeyType          string   `protobuf:"bytes,4,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	ToJson           bool     `protobuf:"varint,5,opt,name=to_json,json=toJson,proto3" json:"to_json,omitempty"`
	WithBlockNum     bool     `protobuf:"varint,6,opt,name=with_block_num,json=withBlockNum,proto3" json:"with_block_num,omitempty"`
	IrreversibleOnly bool     `protobuf:"varint,7,opt,name=irreversible_only,json=irreversibleOnly,proto3" json:"irreversible_only,omitempty"`
	Contracts        []string `protobuf:"bytes,8,rep,name=contracts,proto3" json:"contracts,omitempty"`
}

func (x *StreamMultiContractsTableRowsRequest) Reset() {
	*x = StreamMultiContractsTableRowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMultiContractsTableRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMultiContractsTableRowsRequest) ProtoMessage() {}

func (x *StreamMultiContractsTableRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMultiContractsTableRowsRequest.ProtoReflect.Descriptor instead.
func (*StreamMultiContractsTableRowsRequest) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{14}
}

func (x *StreamMultiContractsTableRowsRequest) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *StreamMultiContractsTableRowsRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *StreamMultiContractsTableRowsRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *StreamMultiContractsTableRowsRequest) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *StreamMultiContractsTableRowsRequest) GetToJson() bool {
	if x != nil {
		return x.ToJson
	}
	return false
}

func (x *StreamMultiContractsTableRowsRequest) GetWithBlockNum() bool {
	if x != nil {
		return x.WithBlockNum
	}
	return false
}

func (x *StreamMultiContractsTableRowsRequest) GetIrreversibleOnly() bool {
	if x != nil {
		return x.IrreversibleOnly
	}
	return false
}

func (x *StreamMultiContractsTableRowsRequest) GetContracts() []string {
	if x != nil {
		return x.Contracts
	}
	return nil
}

type TableRowsScopeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string              `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Rows  []*TableRowResponse `protobuf:"bytes,4,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *TableRowsScopeResponse) Reset() {
	*x = TableRowsScopeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableRowsScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableRowsScopeResponse) ProtoMessage() {}

func (x *TableRowsScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableRowsScopeResponse.ProtoReflect.Descriptor instead.
func (*TableRowsScopeResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{15}
}

func (x *TableRowsScopeResponse) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *TableRowsScopeResponse) GetRows() []*TableRowResponse {
	if x != nil {
		return x.Rows
	}
	return nil
}

type TableRowsContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract string              `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Rows     []*TableRowResponse `protobuf:"bytes,4,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *TableRowsContractResponse) Reset() {
	*x = TableRowsContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableRowsContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableRowsContractResponse) ProtoMessage() {}

func (x *TableRowsContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableRowsContractResponse.ProtoReflect.Descriptor instead.
func (*TableRowsContractResponse) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP(), []int{16}
}

func (x *TableRowsContractResponse) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *TableRowsContractResponse) GetRows() []*TableRowResponse {
	if x != nil {
		return x.Rows
	}
	return nil
}

var File_dfuse_eosio_statedb_v1_statedb_proto protoreflect.FileDescriptor

var file_dfuse_eosio_statedb_v1_statedb_proto_rawDesc = []byte{
	0x0a, 0x24, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2f, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f,
	0x73, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1e,
	0x64, 0x66, 0x75, 0x73, 0x65, 0x2f, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x42, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6a,
	0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x74, 0x6f, 0x4a, 0x73, 0x6f,
	0x6e, 0x22, 0x61, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x42, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x77, 0x5f, 0x61, 0x62, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x72, 0x61, 0x77, 0x41, 0x62, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f,
	0x6e, 0x5f, 0x61, 0x62, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f,
	0x6e, 0x41, 0x62, 0x69, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x22, 0x51, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x52, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xf8, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0b, 0x75, 0x70, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x62, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x66,
	0x52, 0x09, 0x75, 0x70, 0x54, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x52, 0x0a, 0x17, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x69, 0x72, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64,
	0x66, 0x75, 0x73, 0x65, 0x2e, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x72,
	0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x4a, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73,
	0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6f, 0x0a, 0x10, 0x4c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa1, 0x02, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x6f, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x74, 0x6f,
	0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x69,
	0x74, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x72,
	0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x72, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x22, 0xe1, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x75, 0x70, 0x5f, 0x74,
	0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x52, 0x09, 0x75, 0x70, 0x54, 0x6f, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x52, 0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x72, 0x72,
	0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x62, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x66, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x72, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3a, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f,
	0x73, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x03, 0x72, 0x6f, 0x77, 0x22, 0x84, 0x02, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x74, 0x6f, 0x4a, 0x73, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x72, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x69, 0x72, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x10,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x47,
	0x0a, 0x12, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x21, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x74, 0x6f, 0x4a, 0x73, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x72, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x69, 0x72, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x94, 0x02, 0x0a, 0x24,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6a,
	0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x74, 0x6f, 0x4a, 0x73, 0x6f,
	0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x72, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x69, 0x72, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x22, 0x6c, 0x0a, 0x16, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x22, 0x75, 0x0a, 0x19, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e,
	0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x32, 0xbb, 0x07, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x57, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x42, 0x49, 0x12, 0x25, 0x2e, 0x64, 0x66,
	0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x42, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x42, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x64,
	0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x64, 0x66,
	0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x12, 0x31, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73,
	0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x2a, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e,
	0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69,
	0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6d, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x6f, 0x77, 0x73, 0x12, 0x2e, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69,
	0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69,
	0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x73, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73,
	0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65,
	0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x12, 0x89, 0x01, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x6f, 0x77, 0x73, 0x12, 0x39, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69,
	0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77,
	0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01,
	0x12, 0x92, 0x01, 0x0a, 0x1d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f,
	0x77, 0x73, 0x12, 0x3c, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x6f, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x73, 0x68, 0x75, 0x77, 0x65, 0x6e, 0x2f,
	0x68, 0x69, 0x73, 0x74, 0x65, 0x78, 0x70, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x66, 0x75, 0x73, 0x65,
	0x2f, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2f, 0x76,
	0x31, 0x3b, 0x70, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_dfuse_eosio_statedb_v1_statedb_proto_rawDescOnce sync.Once
	file_dfuse_eosio_statedb_v1_statedb_proto_rawDescData = file_dfuse_eosio_statedb_v1_statedb_proto_rawDesc
)

func file_dfuse_eosio_statedb_v1_statedb_proto_rawDescGZIP() []byte {
	file_dfuse_eosio_statedb_v1_statedb_proto_rawDescOnce.Do(func() {
		file_dfuse_eosio_statedb_v1_statedb_proto_rawDescData = protoimpl.X.CompressGZIP(file_dfuse_eosio_statedb_v1_statedb_proto_rawDescData)
	})
	return file_dfuse_eosio_statedb_v1_statedb_proto_rawDescData
}

var file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_dfuse_eosio_statedb_v1_statedb_proto_goTypes = []interface{}{
	(*GetABIRequest)(nil),                        // 0: dfuse.eosio.statedb.v1.GetABIRequest
	(*GetABIResponse)(nil),                       // 1: dfuse.eosio.statedb.v1.GetABIResponse
	(*GetKeyAccountsRequest)(nil),                // 2: dfuse.eosio.statedb.v1.GetKeyAccountsRequest
	(*GetKeyAccountsResponse)(nil),               // 3: dfuse.eosio.statedb.v1.GetKeyAccountsResponse
	(*GetPermissionLinksRequest)(nil),            // 4: dfuse.eosio.statedb.v1.GetPermissionLinksRequest
	(*GetPermissionLinksResponse)(nil),           // 5: dfuse.eosio.statedb.v1.GetPermissionLinksResponse
	(*LinkedPermission)(nil),                     // 6: dfuse.eosio.statedb.v1.LinkedPermission
	(*GetTableRowRequest)(nil),                   // 7: dfuse.eosio.statedb.v1.GetTableRowRequest
	(*GetTableRowResponse)(nil),                  // 8: dfuse.eosio.statedb.v1.GetTableRowResponse
	(*StreamTableRowsRequest)(nil),               // 9: dfuse.eosio.statedb.v1.StreamTableRowsRequest
	(*TableRowResponse)(nil),                     // 10: dfuse.eosio.statedb.v1.TableRowResponse
	(*StreamTableScopesRequest)(nil),             // 11: dfuse.eosio.statedb.v1.StreamTableScopesRequest
	(*TableScopeResponse)(nil),                   // 12: dfuse.eosio.statedb.v1.TableScopeResponse
	(*StreamMultiScopesTableRowsRequest)(nil),    // 13: dfuse.eosio.statedb.v1.StreamMultiScopesTableRowsRequest
	(*StreamMultiContractsTableRowsRequest)(nil), // 14: dfuse.eosio.statedb.v1.StreamMultiContractsTableRowsRequest
	(*TableRowsScopeResponse)(nil),               // 15: dfuse.eosio.statedb.v1.TableRowsScopeResponse
	(*TableRowsContractResponse)(nil),            // 16: dfuse.eosio.statedb.v1.TableRowsContractResponse
	(*v1.BlockRef)(nil),                          // 17: dfuse.bstream.v1.BlockRef
}
var file_dfuse_eosio_statedb_v1_statedb_proto_depIdxs = []int32{
	17, // 0: dfuse.eosio.statedb.v1.GetPermissionLinksResponse.up_to_block:type_name -> dfuse.bstream.v1.BlockRef
	17, // 1: dfuse.eosio.statedb.v1.GetPermissionLinksResponse.last_irreversible_block:type_name -> dfuse.bstream.v1.BlockRef
	6,  // 2: dfuse.eosio.statedb.v1.GetPermissionLinksResponse.permissions:type_name -> dfuse.eosio.statedb.v1.LinkedPermission
	17, // 3: dfuse.eosio.statedb.v1.GetTableRowResponse.up_to_block:type_name -> dfuse.bstream.v1.BlockRef
	17, // 4: dfuse.eosio.statedb.v1.GetTableRowResponse.last_irreversible_block:type_name -> dfuse.bstream.v1.BlockRef
	10, // 5: dfuse.eosio.statedb.v1.GetTableRowResponse.row:type_name -> dfuse.eosio.statedb.v1.TableRowResponse
	10, // 6: dfuse.eosio.statedb.v1.TableRowsScopeResponse.rows:type_name -> dfuse.eosio.statedb.v1.TableRowResponse
	10, // 7: dfuse.eosio.statedb.v1.TableRowsContractResponse.rows:type_name -> dfuse.eosio.statedb.v1.TableRowResponse
	0,  // 8: dfuse.eosio.statedb.v1.State.GetABI:input_type -> dfuse.eosio.statedb.v1.GetABIRequest
	2,  // 9: dfuse.eosio.statedb.v1.State.GetKeyAccounts:input_type -> dfuse.eosio.statedb.v1.GetKeyAccountsRequest
	4,  // 10: dfuse.eosio.statedb.v1.State.GetPermissionLinks:input_type -> dfuse.eosio.statedb.v1.GetPermissionLinksRequest
	7,  // 11: dfuse.eosio.statedb.v1.State.GetTableRow:input_type -> dfuse.eosio.statedb.v1.GetTableRowRequest
	9,  // 12: dfuse.eosio.statedb.v1.State.StreamTableRows:input_type -> dfuse.eosio.statedb.v1.StreamTableRowsRequest
	11, // 13: dfuse.eosio.statedb.v1.State.StreamTableScopes:input_type -> dfuse.eosio.statedb.v1.StreamTableScopesRequest
	13, // 14: dfuse.eosio.statedb.v1.State.StreamMultiScopesTableRows:input_type -> dfuse.eosio.statedb.v1.StreamMultiScopesTableRowsRequest
	14, // 15: dfuse.eosio.statedb.v1.State.StreamMultiContractsTableRows:input_type -> dfuse.eosio.statedb.v1.StreamMultiContractsTableRowsRequest
	1,  // 16: dfuse.eosio.statedb.v1.State.GetABI:output_type -> dfuse.eosio.statedb.v1.GetABIResponse
	3,  // 17: dfuse.eosio.statedb.v1.State.GetKeyAccounts:output_type -> dfuse.eosio.statedb.v1.GetKeyAccountsResponse
	5,  // 18: dfuse.eosio.statedb.v1.State.GetPermissionLinks:output_type -> dfuse.eosio.statedb.v1.GetPermissionLinksResponse
	8,  // 19: dfuse.eosio.statedb.v1.State.GetTableRow:output_type -> dfuse.eosio.statedb.v1.GetTableRowResponse
	10, // 20: dfuse.eosio.statedb.v1.State.StreamTableRows:output_type -> dfuse.eosio.statedb.v1.TableRowResponse
	12, // 21: dfuse.eosio.statedb.v1.State.StreamTableScopes:output_type -> dfuse.eosio.statedb.v1.TableScopeResponse
	15, // 22: dfuse.eosio.statedb.v1.State.StreamMultiScopesTableRows:output_type -> dfuse.eosio.statedb.v1.TableRowsScopeResponse
	16, // 23: dfuse.eosio.statedb.v1.State.StreamMultiContractsTableRows:output_type -> dfuse.eosio.statedb.v1.TableRowsContractResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_dfuse_eosio_statedb_v1_statedb_proto_init() }
func file_dfuse_eosio_statedb_v1_statedb_proto_init() {
	if File_dfuse_eosio_statedb_v1_statedb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetABIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetABIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableRowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableRowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamTableRowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableRowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamTableScopesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableScopeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMultiScopesTableRowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMultiContractsTableRowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableRowsScopeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableRowsContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dfuse_eosio_statedb_v1_statedb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dfuse_eosio_statedb_v1_statedb_proto_goTypes,
		DependencyIndexes: file_dfuse_eosio_statedb_v1_statedb_proto_depIdxs,
		MessageInfos:      file_dfuse_eosio_statedb_v1_statedb_proto_msgTypes,
	}.Build()
	File_dfuse_eosio_statedb_v1_statedb_proto = out.File
	file_dfuse_eosio_statedb_v1_statedb_proto_rawDesc = nil
	file_dfuse_eosio_statedb_v1_statedb_proto_goTypes = nil
	file_dfuse_eosio_statedb_v1_statedb_proto_depIdxs = nil
}
