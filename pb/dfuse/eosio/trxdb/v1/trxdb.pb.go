// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: dfuse/eosio/trxdb/v1/trxdb.proto

package pbtrxdb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	v1 "github.com/zhongshuwen/historyexp/pb/dfuse/eosio/codec/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// IndexableCategory represents the valid catgory that can be read/write by
// the TrxDB instance.
//
// Those enum are used mainly throughout the code to determine what needs to
// be written to the database as well as where to read each component.
type IndexableCategory int32

const (
	IndexableCategory_INDEXABLE_CATEGORY_ACCOUNT     IndexableCategory = 0
	IndexableCategory_INDEXABLE_CATEGORY_BLOCK       IndexableCategory = 1
	IndexableCategory_INDEXABLE_CATEGORY_TRANSACTION IndexableCategory = 2
	IndexableCategory_INDEXABLE_CATEGORY_TIMELINE    IndexableCategory = 3
)

// Enum value maps for IndexableCategory.
var (
	IndexableCategory_name = map[int32]string{
		0: "INDEXABLE_CATEGORY_ACCOUNT",
		1: "INDEXABLE_CATEGORY_BLOCK",
		2: "INDEXABLE_CATEGORY_TRANSACTION",
		3: "INDEXABLE_CATEGORY_TIMELINE",
	}
	IndexableCategory_value = map[string]int32{
		"INDEXABLE_CATEGORY_ACCOUNT":     0,
		"INDEXABLE_CATEGORY_BLOCK":       1,
		"INDEXABLE_CATEGORY_TRANSACTION": 2,
		"INDEXABLE_CATEGORY_TIMELINE":    3,
	}
)

func (x IndexableCategory) Enum() *IndexableCategory {
	p := new(IndexableCategory)
	*p = x
	return p
}

func (x IndexableCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexableCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_dfuse_eosio_trxdb_v1_trxdb_proto_enumTypes[0].Descriptor()
}

func (IndexableCategory) Type() protoreflect.EnumType {
	return &file_dfuse_eosio_trxdb_v1_trxdb_proto_enumTypes[0]
}

func (x IndexableCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexableCategory.Descriptor instead.
func (IndexableCategory) EnumDescriptor() ([]byte, []int) {
	return file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescGZIP(), []int{0}
}

type ImplicitTrxRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Primary key to include: transaction_id and block_id
	SignedTrx *v1.SignedTransaction `protobuf:"bytes,1,opt,name=signed_trx,json=signedTrx,proto3" json:"signed_trx,omitempty"`
	Name      string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ImplicitTrxRow) Reset() {
	*x = ImplicitTrxRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImplicitTrxRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImplicitTrxRow) ProtoMessage() {}

func (x *ImplicitTrxRow) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImplicitTrxRow.ProtoReflect.Descriptor instead.
func (*ImplicitTrxRow) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescGZIP(), []int{0}
}

func (x *ImplicitTrxRow) GetSignedTrx() *v1.SignedTransaction {
	if x != nil {
		return x.SignedTrx
	}
	return nil
}

func (x *ImplicitTrxRow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TrxRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedTrx  *v1.SignedTransaction  `protobuf:"bytes,1,opt,name=signed_trx,json=signedTrx,proto3" json:"signed_trx,omitempty"`
	Receipt    *v1.TransactionReceipt `protobuf:"bytes,2,opt,name=receipt,proto3" json:"receipt,omitempty"`
	PublicKeys *v1.PublicKeys         `protobuf:"bytes,3,opt,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
}

func (x *TrxRow) Reset() {
	*x = TrxRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrxRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrxRow) ProtoMessage() {}

func (x *TrxRow) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrxRow.ProtoReflect.Descriptor instead.
func (*TrxRow) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescGZIP(), []int{1}
}

func (x *TrxRow) GetSignedTrx() *v1.SignedTransaction {
	if x != nil {
		return x.SignedTrx
	}
	return nil
}

func (x *TrxRow) GetReceipt() *v1.TransactionReceipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

func (x *TrxRow) GetPublicKeys() *v1.PublicKeys {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

type TrxTraceRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxTrace    *v1.TransactionTrace `protobuf:"bytes,1,opt,name=trx_trace,json=trxTrace,proto3" json:"trx_trace,omitempty"`
	BlockHeader *v1.BlockHeader      `protobuf:"bytes,2,opt,name=block_header,json=blockHeader,proto3" json:"block_header,omitempty"`
}

func (x *TrxTraceRow) Reset() {
	*x = TrxTraceRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrxTraceRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrxTraceRow) ProtoMessage() {}

func (x *TrxTraceRow) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrxTraceRow.ProtoReflect.Descriptor instead.
func (*TrxTraceRow) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescGZIP(), []int{2}
}

func (x *TrxTraceRow) GetTrxTrace() *v1.TransactionTrace {
	if x != nil {
		return x.TrxTrace
	}
	return nil
}

func (x *TrxTraceRow) GetBlockHeader() *v1.BlockHeader {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

type DtrxRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedTrx  *v1.SignedTransaction `protobuf:"bytes,1,opt,name=signed_trx,json=signedTrx,proto3" json:"signed_trx,omitempty"`
	CreatedBy  *v1.ExtDTrxOp         `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CanceledBy *v1.ExtDTrxOp         `protobuf:"bytes,3,opt,name=canceled_by,json=canceledBy,proto3" json:"canceled_by,omitempty"`
}

func (x *DtrxRow) Reset() {
	*x = DtrxRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DtrxRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DtrxRow) ProtoMessage() {}

func (x *DtrxRow) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DtrxRow.ProtoReflect.Descriptor instead.
func (*DtrxRow) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescGZIP(), []int{3}
}

func (x *DtrxRow) GetSignedTrx() *v1.SignedTransaction {
	if x != nil {
		return x.SignedTrx
	}
	return nil
}

func (x *DtrxRow) GetCreatedBy() *v1.ExtDTrxOp {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *DtrxRow) GetCanceledBy() *v1.ExtDTrxOp {
	if x != nil {
		return x.CanceledBy
	}
	return nil
}

type BlockRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block           *v1.Block           `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	ImplicitTrxRefs *v1.TransactionRefs `protobuf:"bytes,2,opt,name=implicit_trx_refs,json=implicitTrxRefs,proto3" json:"implicit_trx_refs,omitempty"`
	TrxRefs         *v1.TransactionRefs `protobuf:"bytes,3,opt,name=trx_refs,json=trxRefs,proto3" json:"trx_refs,omitempty"`
	TraceRefs       *v1.TransactionRefs `protobuf:"bytes,4,opt,name=trace_refs,json=traceRefs,proto3" json:"trace_refs,omitempty"`
}

func (x *BlockRow) Reset() {
	*x = BlockRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRow) ProtoMessage() {}

func (x *BlockRow) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRow.ProtoReflect.Descriptor instead.
func (*BlockRow) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescGZIP(), []int{4}
}

func (x *BlockRow) GetBlock() *v1.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *BlockRow) GetImplicitTrxRefs() *v1.TransactionRefs {
	if x != nil {
		return x.ImplicitTrxRefs
	}
	return nil
}

func (x *BlockRow) GetTrxRefs() *v1.TransactionRefs {
	if x != nil {
		return x.TrxRefs
	}
	return nil
}

func (x *BlockRow) GetTraceRefs() *v1.TransactionRefs {
	if x != nil {
		return x.TraceRefs
	}
	return nil
}

type AccountRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key will be account:block_id    // block_id, block_num and account implicit in key
	Name      string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Creator   string               `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	BlockId   string               `protobuf:"bytes,3,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	TrxId     string               `protobuf:"bytes,4,opt,name=trx_id,json=trxId,proto3" json:"trx_id,omitempty"`
	BlockTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
}

func (x *AccountRow) Reset() {
	*x = AccountRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRow) ProtoMessage() {}

func (x *AccountRow) ProtoReflect() protoreflect.Message {
	mi := &file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRow.ProtoReflect.Descriptor instead.
func (*AccountRow) Descriptor() ([]byte, []int) {
	return file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescGZIP(), []int{5}
}

func (x *AccountRow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountRow) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *AccountRow) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *AccountRow) GetTrxId() string {
	if x != nil {
		return x.TrxId
	}
	return ""
}

func (x *AccountRow) GetBlockTime() *timestamp.Timestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

var File_dfuse_eosio_trxdb_v1_trxdb_proto protoreflect.FileDescriptor

var file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDesc = []byte{
	0x0a, 0x20, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2f, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2f, 0x74, 0x72,
	0x78, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x78, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e,
	0x74, 0x72, 0x78, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2f,
	0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x64, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x0e, 0x49,
	0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x54, 0x72, 0x78, 0x52, 0x6f, 0x77, 0x12, 0x46, 0x0a,
	0x0a, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x54, 0x72, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x06, 0x54, 0x72,
	0x78, 0x52, 0x6f, 0x77, 0x12, 0x46, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74,
	0x72, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65,
	0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x78, 0x12, 0x42, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x12, 0x41, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f,
	0x73, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x78, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x52, 0x6f, 0x77, 0x12, 0x43, 0x0a, 0x09, 0x74, 0x72, 0x78, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65,
	0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x08,
	0x74, 0x72, 0x78, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0xd3,
	0x01, 0x0a, 0x07, 0x44, 0x74, 0x72, 0x78, 0x52, 0x6f, 0x77, 0x12, 0x46, 0x0a, 0x0a, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54,
	0x72, 0x78, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65,
	0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x74, 0x44, 0x54, 0x72, 0x78, 0x4f, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e,
	0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x74, 0x44, 0x54, 0x72, 0x78, 0x4f, 0x70, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x65, 0x64, 0x42, 0x79, 0x22, 0x98, 0x02, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f,
	0x77, 0x12, 0x31, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x51, 0x0a, 0x11, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x5f, 0x74, 0x72, 0x78, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x66, 0x73, 0x52, 0x0f, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x54, 0x72, 0x78, 0x52, 0x65, 0x66, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x74, 0x72, 0x78, 0x5f, 0x72,
	0x65, 0x66, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x66, 0x75, 0x73,
	0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x73,
	0x52, 0x07, 0x74, 0x72, 0x78, 0x52, 0x65, 0x66, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x64, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x66, 0x73, 0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x66, 0x73, 0x22,
	0xa7, 0x01, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x72, 0x78, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x78, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0x96, 0x01, 0x0a, 0x11, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x1e, 0x0a, 0x1a, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x54,
	0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x00, 0x12,
	0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x54,
	0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x22, 0x0a,
	0x1e, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47,
	0x4f, 0x52, 0x59, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43,
	0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4c, 0x49, 0x4e, 0x45,
	0x10, 0x03, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x73, 0x68, 0x75, 0x77, 0x65, 0x6e, 0x2f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x65, 0x78, 0x70, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x66, 0x75, 0x73, 0x65,
	0x2f, 0x65, 0x6f, 0x73, 0x69, 0x6f, 0x2f, 0x74, 0x72, 0x78, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x3b,
	0x70, 0x62, 0x74, 0x72, 0x78, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescOnce sync.Once
	file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescData = file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDesc
)

func file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescGZIP() []byte {
	file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescOnce.Do(func() {
		file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescData = protoimpl.X.CompressGZIP(file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescData)
	})
	return file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDescData
}

var file_dfuse_eosio_trxdb_v1_trxdb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_dfuse_eosio_trxdb_v1_trxdb_proto_goTypes = []interface{}{
	(IndexableCategory)(0),        // 0: dfuse.eosio.trxdb.v1.IndexableCategory
	(*ImplicitTrxRow)(nil),        // 1: dfuse.eosio.trxdb.v1.ImplicitTrxRow
	(*TrxRow)(nil),                // 2: dfuse.eosio.trxdb.v1.TrxRow
	(*TrxTraceRow)(nil),           // 3: dfuse.eosio.trxdb.v1.TrxTraceRow
	(*DtrxRow)(nil),               // 4: dfuse.eosio.trxdb.v1.DtrxRow
	(*BlockRow)(nil),              // 5: dfuse.eosio.trxdb.v1.BlockRow
	(*AccountRow)(nil),            // 6: dfuse.eosio.trxdb.v1.AccountRow
	(*v1.SignedTransaction)(nil),  // 7: dfuse.eosio.codec.v1.SignedTransaction
	(*v1.TransactionReceipt)(nil), // 8: dfuse.eosio.codec.v1.TransactionReceipt
	(*v1.PublicKeys)(nil),         // 9: dfuse.eosio.codec.v1.PublicKeys
	(*v1.TransactionTrace)(nil),   // 10: dfuse.eosio.codec.v1.TransactionTrace
	(*v1.BlockHeader)(nil),        // 11: dfuse.eosio.codec.v1.BlockHeader
	(*v1.ExtDTrxOp)(nil),          // 12: dfuse.eosio.codec.v1.ExtDTrxOp
	(*v1.Block)(nil),              // 13: dfuse.eosio.codec.v1.Block
	(*v1.TransactionRefs)(nil),    // 14: dfuse.eosio.codec.v1.TransactionRefs
	(*timestamp.Timestamp)(nil),   // 15: google.protobuf.Timestamp
}
var file_dfuse_eosio_trxdb_v1_trxdb_proto_depIdxs = []int32{
	7,  // 0: dfuse.eosio.trxdb.v1.ImplicitTrxRow.signed_trx:type_name -> dfuse.eosio.codec.v1.SignedTransaction
	7,  // 1: dfuse.eosio.trxdb.v1.TrxRow.signed_trx:type_name -> dfuse.eosio.codec.v1.SignedTransaction
	8,  // 2: dfuse.eosio.trxdb.v1.TrxRow.receipt:type_name -> dfuse.eosio.codec.v1.TransactionReceipt
	9,  // 3: dfuse.eosio.trxdb.v1.TrxRow.public_keys:type_name -> dfuse.eosio.codec.v1.PublicKeys
	10, // 4: dfuse.eosio.trxdb.v1.TrxTraceRow.trx_trace:type_name -> dfuse.eosio.codec.v1.TransactionTrace
	11, // 5: dfuse.eosio.trxdb.v1.TrxTraceRow.block_header:type_name -> dfuse.eosio.codec.v1.BlockHeader
	7,  // 6: dfuse.eosio.trxdb.v1.DtrxRow.signed_trx:type_name -> dfuse.eosio.codec.v1.SignedTransaction
	12, // 7: dfuse.eosio.trxdb.v1.DtrxRow.created_by:type_name -> dfuse.eosio.codec.v1.ExtDTrxOp
	12, // 8: dfuse.eosio.trxdb.v1.DtrxRow.canceled_by:type_name -> dfuse.eosio.codec.v1.ExtDTrxOp
	13, // 9: dfuse.eosio.trxdb.v1.BlockRow.block:type_name -> dfuse.eosio.codec.v1.Block
	14, // 10: dfuse.eosio.trxdb.v1.BlockRow.implicit_trx_refs:type_name -> dfuse.eosio.codec.v1.TransactionRefs
	14, // 11: dfuse.eosio.trxdb.v1.BlockRow.trx_refs:type_name -> dfuse.eosio.codec.v1.TransactionRefs
	14, // 12: dfuse.eosio.trxdb.v1.BlockRow.trace_refs:type_name -> dfuse.eosio.codec.v1.TransactionRefs
	15, // 13: dfuse.eosio.trxdb.v1.AccountRow.block_time:type_name -> google.protobuf.Timestamp
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_dfuse_eosio_trxdb_v1_trxdb_proto_init() }
func file_dfuse_eosio_trxdb_v1_trxdb_proto_init() {
	if File_dfuse_eosio_trxdb_v1_trxdb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImplicitTrxRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrxRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrxTraceRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DtrxRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dfuse_eosio_trxdb_v1_trxdb_proto_goTypes,
		DependencyIndexes: file_dfuse_eosio_trxdb_v1_trxdb_proto_depIdxs,
		EnumInfos:         file_dfuse_eosio_trxdb_v1_trxdb_proto_enumTypes,
		MessageInfos:      file_dfuse_eosio_trxdb_v1_trxdb_proto_msgTypes,
	}.Build()
	File_dfuse_eosio_trxdb_v1_trxdb_proto = out.File
	file_dfuse_eosio_trxdb_v1_trxdb_proto_rawDesc = nil
	file_dfuse_eosio_trxdb_v1_trxdb_proto_goTypes = nil
	file_dfuse_eosio_trxdb_v1_trxdb_proto_depIdxs = nil
}
